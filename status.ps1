# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –¥–ª—è Windows
# –ó–∞–ø—É—Å–∫: .\status.ps1

Write-Host "üìä –°—Ç–∞—Ç—É—Å Telegram –±–æ—Ç–∞" -ForegroundColor Cyan
Write-Host "================================"

# –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã deno
$denoProcesses = Get-Process -Name "deno" -ErrorAction SilentlyContinue

if ($denoProcesses) {
    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Deno: $($denoProcesses.Count)" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö:" -ForegroundColor Blue
    
    foreach ($process in $denoProcesses) {
        $startTime = $process.StartTime
        $runTime = if ($startTime) { (Get-Date) - $startTime } else { "N/A" }
        $cpuTime = $process.TotalProcessorTime
        $workingSet = [math]::Round($process.WorkingSet / 1MB, 2)
        
        Write-Host "  PID: $($process.Id)" -ForegroundColor Yellow
        Write-Host "  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: $($runTime.ToString('hh\:mm\:ss'))" -ForegroundColor Gray
        Write-Host "  CPU –≤—Ä–µ–º—è: $($cpuTime.ToString('hh\:mm\:ss'))" -ForegroundColor Gray
        Write-Host "  –ü–∞–º—è—Ç—å: $workingSet MB" -ForegroundColor Gray
        Write-Host "  ---"
    }
} else {
    Write-Host "‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
Write-Host ""
Write-Host "üìÅ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:" -ForegroundColor Blue

$files = @(
    @{Name="chatbot.ts"; Required=$true},
    @{Name=".env"; Required=$true},
    @{Name="env.example"; Required=$false},
    @{Name="lock.json"; Required=$false}
)

foreach ($file in $files) {
    if (Test-Path $file.Name) {
        $size = (Get-Item $file.Name).Length
        Write-Host "  ‚úÖ $($file.Name) ($size bytes)" -ForegroundColor Green
    } else {
        if ($file.Required) {
            Write-Host "  ‚ùå $($file.Name) (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)" -ForegroundColor Red
        } else {
            Write-Host "  ‚ö†Ô∏è  $($file.Name) (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)" -ForegroundColor Yellow
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
if (Test-Path ".env") {
    Write-Host ""
    Write-Host "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ .env:" -ForegroundColor Blue
    
    $envContent = Get-Content ".env" -ErrorAction SilentlyContinue
    $configs = @("BOT_TOKEN", "OPENROUTER_API_KEY", "OPENROUTER_MODEL", "COMMENT_ALL_MESSAGES", "DEFAULT_STYLE")
    
    foreach ($config in $configs) {
        $line = $envContent | Where-Object { $_ -match "^$config=" }
        if ($line) {
            $value = ($line -split "=", 2)[1]
            if ($value -and $value -ne "YOUR_BOT_TOKEN" -and $value -ne "YOUR_OPENROUTER_API_KEY") {
                Write-Host "  ‚úÖ $config –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
            } else {
                Write-Host "  ‚ùå $config –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Red
            }
        } else {
            Write-Host "  ‚ö†Ô∏è  $config –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
        }
    }
}

Write-Host ""
Write-Host "üí° –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:" -ForegroundColor Blue
Write-Host "  .\start.ps1   - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"
Write-Host "  .\stop.ps1    - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞" 
Write-Host "  .\restart.ps1 - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"
Write-Host "  .\status.ps1  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"